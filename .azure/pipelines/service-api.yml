name: service-api
resources:
  containers:
  - container: kaniko
    image: 'gcr.io/kaniko-project/executor:$(kaniko-version)'
  repositories:
    - repository: rpKubernetes
      type: github
      name: reportportal/kubernetes
      endpoint: reportportal

trigger:
- stable-azure

stages:
- stage: assemble
  jobs:
  - job: build
    pool: 
      vmImage: $(vm-image)
    steps:
    - bash: |
        snapshotVersion=`cat $(version-file) | grep $(version-property) | cut -d '=' -f2-`
        echo "##vso[task.setvariable variable=snapshotVersion;isOutput=true]$snapshotVersion"

        buildVersion=`echo AZURE-BUILD-$(Build.BuildId)`
        echo "##vso[task.setvariable variable=buildVersion;isOutput=true]$buildVersion"
        
        serviceVersion=`echo "${snapshotVersion}-${buildVersion}"`
        echo "##vso[task.setvariable variable=serviceVersion;isOutput=true]$serviceVersion"
        tag=`echo "$serviceVersion" | tr '[:upper:]' '[:lower:]'`
        echo "##vso[task.setvariable variable=tag;isOutput=true]$tag"
      name: getVersions
      displayName: 'Get application versions'

    - bash: |
        echo "$(getVersions.snapshotVersion)"
        echo "$(getVersions.buildVersion)"
        echo "$(getVersions.serviceVersion)"
        echo "$(getVersions.tag)"
      displayName: 'Print application versions'

    - task: Docker@2
      displayName: Login to GCR
      inputs:
        command: login
        repository: $(repository)
        containerRegistry: gcr-rp-demo

    - task: Docker@2
      displayName: Build container
      inputs:
        command: build
        Dockerfile: 'docker/Dockerfile-develop'
        repository: $(repository)
        tags: '$(getVersions.tag)'
        buildContext: '$(Build.Repository.LocalPath)'
        arguments: '--build-arg buildNumber=$(buildVersion)'

    - task: Docker@2
      displayName: Push image
      inputs:
        command: push
        repository: $(repository)
        tags: '$(getVersions.tag)'

    - task: Docker@2
      displayName: Logout from ACR
      inputs:
        command: logout
        containerRegistry: gcr-rp-demo

- stage: deploy
  dependsOn: assemble
  variables:
    tag: $[ stageDependencies.assemble.build.outputs['getVersions.tag'] ]
  jobs:
  - job: helm
    pool: 
      vmImage: $(vm-image)
    steps:

    - task: HelmInstaller@0
      inputs:
        helmVersion: '3.3.4'
        installKubectl: true

    - task: InstallSSHKey@0
      inputs:
        knownHostsEntry: |
          git.epam.com,10.6.237.184 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBDT6RwUv9Mis/38mDtHK3dKcXGJ+nhucUwCSTh0dMu66Ui2/5DrJ1XadJ2vOATGPwzEtlhmstKHs6pDegmxBOq0=
          ecsc00a01573.epam.com,10.6.221.194 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBMtTvvaSVcmLk9Y5jvx/0n4UEYrPL2O+I6Kbdr9wNBHGd7SY+9kj3uQ7Z4YP20OWZ2MkPEke2/8Lb+TMJ3d/6pE=
        sshKeySecureFile: '$(epm-gitlab-key)'

    - bash: |
        git clone git@git.epam.com:epmc-tst/reportportal-ci.git
