/*
 * This file is generated by jOOQ.
*/
package com.epam.ta.reportportal.store.jooq.tables;


import com.epam.ta.reportportal.store.jooq.Indexes;
import com.epam.ta.reportportal.store.jooq.JPublic;
import com.epam.ta.reportportal.store.jooq.Keys;
import com.epam.ta.reportportal.store.jooq.enums.JAuthTypeEnum;
import com.epam.ta.reportportal.store.jooq.tables.records.JBugTrackingSystemAuthRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JBugTrackingSystemAuth extends TableImpl<JBugTrackingSystemAuthRecord> {

    private static final long serialVersionUID = -1758948961;

    /**
     * The reference instance of <code>public.bug_tracking_system_auth</code>
     */
    public static final JBugTrackingSystemAuth BUG_TRACKING_SYSTEM_AUTH = new JBugTrackingSystemAuth();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JBugTrackingSystemAuthRecord> getRecordType() {
        return JBugTrackingSystemAuthRecord.class;
    }

    /**
     * The column <code>public.bug_tracking_system_auth.id</code>.
     */
    public final TableField<JBugTrackingSystemAuthRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.bug_tracking_system_auth.auth_type</code>.
     */
    public final TableField<JBugTrackingSystemAuthRecord, JAuthTypeEnum> AUTH_TYPE = createField("auth_type", org.jooq.util.postgres.PostgresDataType.VARCHAR.asEnumDataType(com.epam.ta.reportportal.store.jooq.enums.JAuthTypeEnum.class), this, "");

    /**
     * The column <code>public.bug_tracking_system_auth.username</code>.
     */
    public final TableField<JBugTrackingSystemAuthRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.bug_tracking_system_auth.password</code>.
     */
    public final TableField<JBugTrackingSystemAuthRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.bug_tracking_system_auth.domain</code>.
     */
    public final TableField<JBugTrackingSystemAuthRecord, String> DOMAIN = createField("domain", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.bug_tracking_system_auth.accesskey</code>.
     */
    public final TableField<JBugTrackingSystemAuthRecord, String> ACCESSKEY = createField("accesskey", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * Create a <code>public.bug_tracking_system_auth</code> table reference
     */
    public JBugTrackingSystemAuth() {
        this(DSL.name("bug_tracking_system_auth"), null);
    }

    /**
     * Create an aliased <code>public.bug_tracking_system_auth</code> table reference
     */
    public JBugTrackingSystemAuth(String alias) {
        this(DSL.name(alias), BUG_TRACKING_SYSTEM_AUTH);
    }

    /**
     * Create an aliased <code>public.bug_tracking_system_auth</code> table reference
     */
    public JBugTrackingSystemAuth(Name alias) {
        this(alias, BUG_TRACKING_SYSTEM_AUTH);
    }

    private JBugTrackingSystemAuth(Name alias, Table<JBugTrackingSystemAuthRecord> aliased) {
        this(alias, aliased, null);
    }

    private JBugTrackingSystemAuth(Name alias, Table<JBugTrackingSystemAuthRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return JPublic.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.BUG_TRACKING_SYSTEM_AUTH_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<JBugTrackingSystemAuthRecord> getPrimaryKey() {
        return Keys.BUG_TRACKING_SYSTEM_AUTH_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<JBugTrackingSystemAuthRecord>> getKeys() {
        return Arrays.<UniqueKey<JBugTrackingSystemAuthRecord>>asList(Keys.BUG_TRACKING_SYSTEM_AUTH_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<JBugTrackingSystemAuthRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<JBugTrackingSystemAuthRecord, ?>>asList(Keys.BUG_TRACKING_SYSTEM_AUTH__BUG_TRACKING_SYSTEM_AUTH_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JBugTrackingSystemAuth as(String alias) {
        return new JBugTrackingSystemAuth(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JBugTrackingSystemAuth as(Name alias) {
        return new JBugTrackingSystemAuth(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JBugTrackingSystemAuth rename(String name) {
        return new JBugTrackingSystemAuth(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JBugTrackingSystemAuth rename(Name name) {
        return new JBugTrackingSystemAuth(name, null);
    }
}
