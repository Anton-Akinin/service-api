/*
 * This file is generated by jOOQ.
*/
package com.epam.ta.reportportal.store.jooq.tables.records;

import com.epam.ta.reportportal.store.jooq.tables.JDefectFieldAllowedValue;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Generated;

/**
 * This class is generated by jOOQ.
 */
@Generated(value = { "http://www.jooq.org", "jOOQ version:3.10.4" }, comments = "This class is generated by jOOQ")
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JDefectFieldAllowedValueRecord extends UpdatableRecordImpl<JDefectFieldAllowedValueRecord>
		implements Record4<Integer, Integer, String, String> {

	private static final long serialVersionUID = 906248147;

	/**
	 * Setter for <code>public.defect_field_allowed_value.id</code>.
	 */
	public void setId(Integer value) {
		set(0, value);
	}

	/**
	 * Getter for <code>public.defect_field_allowed_value.id</code>.
	 */
	public Integer getId() {
		return (Integer) get(0);
	}

	/**
	 * Setter for <code>public.defect_field_allowed_value.defect_form_field</code>.
	 */
	public void setDefectFormField(Integer value) {
		set(1, value);
	}

	/**
	 * Getter for <code>public.defect_field_allowed_value.defect_form_field</code>.
	 */
	public Integer getDefectFormField() {
		return (Integer) get(1);
	}

	/**
	 * Setter for <code>public.defect_field_allowed_value.value_id</code>.
	 */
	public void setValueId(String value) {
		set(2, value);
	}

	/**
	 * Getter for <code>public.defect_field_allowed_value.value_id</code>.
	 */
	public String getValueId() {
		return (String) get(2);
	}

	/**
	 * Setter for <code>public.defect_field_allowed_value.value_name</code>.
	 */
	public void setValueName(String value) {
		set(3, value);
	}

	/**
	 * Getter for <code>public.defect_field_allowed_value.value_name</code>.
	 */
	public String getValueName() {
		return (String) get(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, Integer, String, String> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, Integer, String, String> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return JDefectFieldAllowedValue.DEFECT_FIELD_ALLOWED_VALUE.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return JDefectFieldAllowedValue.DEFECT_FIELD_ALLOWED_VALUE.DEFECT_FORM_FIELD;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return JDefectFieldAllowedValue.DEFECT_FIELD_ALLOWED_VALUE.VALUE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return JDefectFieldAllowedValue.DEFECT_FIELD_ALLOWED_VALUE.VALUE_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer component1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer component2() {
		return getDefectFormField();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String component3() {
		return getValueId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String component4() {
		return getValueName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getDefectFormField();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getValueId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getValueName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public JDefectFieldAllowedValueRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public JDefectFieldAllowedValueRecord value2(Integer value) {
		setDefectFormField(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public JDefectFieldAllowedValueRecord value3(String value) {
		setValueId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public JDefectFieldAllowedValueRecord value4(String value) {
		setValueName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public JDefectFieldAllowedValueRecord values(Integer value1, Integer value2, String value3, String value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached JDefectFieldAllowedValueRecord
	 */
	public JDefectFieldAllowedValueRecord() {
		super(JDefectFieldAllowedValue.DEFECT_FIELD_ALLOWED_VALUE);
	}

	/**
	 * Create a detached, initialised JDefectFieldAllowedValueRecord
	 */
	public JDefectFieldAllowedValueRecord(Integer id, Integer defectFormField, String valueId, String valueName) {
		super(JDefectFieldAllowedValue.DEFECT_FIELD_ALLOWED_VALUE);

		set(0, id);
		set(1, defectFormField);
		set(2, valueId);
		set(3, valueName);
	}
}
