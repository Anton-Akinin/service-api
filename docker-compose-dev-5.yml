## You can generate a custom docker compose file automatically on http://reportportal.io/download (Step 2)

## This is example of Docker Compose for ReportPortal
## Do not forget to configure data volumes for production usage

## Execute 'docker-compose -f docker-compose-local.yml -p reportportal up -d --force-recreate' --build
## to start all containers in daemon mode
## Where:
##      '-f docker-compose-local.yml' -- specifies this compose file
##      '-p reportportal' -- specifies container's prefix (project name)
##      '-d' -- enables daemon mode
##      '--force-recreate' -- forces re-recreating of all containers
##      '--build' -- build images before starting containers.
version: '2.4'
services:
  api:
    build:
      context: .
      dockerfile: docker/Dockerfile-local
    volumes:
      - ./data/storage:/data/storage
      - ./plugins:/plugins
      - ./logs:/var
    ports:
      - "8585:8585"
    environment:
      - LOGGING_LEVEL_ORG_HIBERNATE_SQL=info
    #      - JAVA_OPTS=-Xmx1g -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp  -Dcom.sun.management.jmxremote.rmi.port=12349 -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.local.only=false  -Dcom.sun.management.jmxremote.port=9010 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=10.6.128.241 -Djava.security.egd=file:/dev/./urandom
    restart: always
    labels:
      - "traefik.backend=api"
      - "traefik.frontend.rule=PathPrefixStrip:/api"
      - "traefik.enable=true"
      - "traefik.port=8585"
      - "traefik.tags=reportportal"
    command: java -Xmx1g -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -Djava.security.egd=file:/dev/./urandom -jar /home/rp-builder/build/libs/service-api.jar